---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gitlab
  namespace: gitlab
spec:
  chart:
    spec:
      chart: gitlab
      sourceRef:
        kind: HelmRepository
        name: gitlab
        namespace: flux-system
  interval: 30m0s
  timeout: 30m0s
  values:
    global:
      edition: ee
      ingress:
        configureCertmanager: false
        class: nginx-public
        annotations:
          homelab/public: "true"
          external-dns.alpha.kubernetes.io/hostname: gitlab.${DOMAIN},registry.${DOMAIN}
          external-dns.alpha.kubernetes.io/target: ${DOMAIN}
        tls:
          secretName: ${LETSENCRYPT_CERT}
      hosts:
        domain: "${DOMAIN}"
      appConfig:
        enableUsagePing: false
        cron_jobs:
          poll_interval: 60
          ## Flag stuck CI builds as failed
          stuck_ci_jobs_worker:
            cron: "0 * * * *"
          # Schedule pipelines in the near future
          pipeline_schedule_worker:
            cron: "19 * * * *"
          # Remove expired build artifacts
          expire_build_artifacts_worker:
            cron: "*/7 * * * *"
          # Periodically run 'git fsck' on all repositories.
          repository_check_worker:
            cron: "20 * * * *"
          # Send admin emails once a week
          admin_email_worker:
            cron: "0 0 * * 0"
          # Remove outdated repository archives
          repository_archive_cache_worker:
            cron: "0 * * * *"
          # Prune stale group runners on opted-in namespaces
          ci_runners_stale_group_runners_prune_worker_cron:
            cron: "30 * * * *"
          # Periodically update ci_runner_versions table with up-to-date versions and status
          ci_runner_versions_reconciliation_worker:
            cron: "@daily"
          # Periodically clean up stale ci_runner_machines records
          ci_runners_stale_machines_cleanup_worker:
            cron: "36 * * * *"
        omniauth:
          enabled: true
          allowSingleSignOn:
          - saml
          syncProfileFromProvider:
          - saml
          syncProfileAttributes:
          - email
          autoSignInWithProvider: saml
          blockAutoCreatedUsers: false
          autoLinkSamlUser: true
          providers:
          - secret: gitlab-secret
            key: provider
        initialDefaults:
          signupEnabled: false
      pages:
        enabled: true
        host: ${PAGES_DOMAIN}
      psql:
        host: gitlab-postgres-cluster
        database: gitlabhq_production
        username: gitlab
        password:
          useSecret: true
          secret: gitlab.gitlab-postgres-cluster.credentials.postgresql.acid.zalan.do
          key: password
      smtp:
        enabled: true
        address: smtp.sendgrid.net
        port: 587
        user_name: apikey
        password:
          secret: gitlab-secret
          key: SMTP_KEY
        domain: smtp.sendgrid.net
        authentication: plain
        starttls_auto: true
        tls: false
      email:
        from: gitlab@no-reply.${DOMAIN}
        reply_to: noreply@no-reply.${DOMAIN}
    nginx-ingress:
      enabled: false
    certmanager:
      install: false
    gitlab-runner:
      concurrent: 2
      unregisterRunners: true
      runners:
        config: |-
          [[runners]]
            executors = "kubernetes"
            environment = [ "container=kube" ]
            [runners.kubernetes]
            image = "ubuntu:18.04"
              [runners.kubernetes.pod_labels]
              "custom" = "gitlab-runner"
              [runners.kubernetes.affinity]
                [runners.kubernetes.affinity.node_affinity]
                  [[runners.kubernetes.affinity.node_affinity.preferred_during_scheduling_ignored_during_execution]]
                  weight = 99
                    [runners.kubernetes.affinity.node_affinity.preferred_during_scheduling_ignored_during_execution.preference]
                      [[runners.kubernetes.affinity.node_affinity.preferred_during_scheduling_ignored_during_execution.preference.match_expressions]]
                      key = "node-role.kubernetes.io/master"
                      operator = "NotIn"
                      values = ["true"]
                [runners.kubernetes.affinity.pod_anti_affinity]
                  [[runners.kubernetes.affinity.pod_anti_affinity.preferred_during_scheduling_ignored_during_execution]]
                  weight = 100
                  [runners.kubernetes.affinity.pod_anti_affinity.preferred_during_scheduling_ignored_during_execution.pod_affinity_term]
                  topology_key = "kubernetes.io/hostname"
                    [runners.kubernetes.affinity.pod_anti_affinity.preferred_during_scheduling_ignored_during_execution.pod_affinity_term.label_selector]
                      [[runners.kubernetes.affinity.pod_anti_affinity.preferred_during_scheduling_ignored_during_execution.pod_affinity_term.label_selector.match_expressions]]
                      key = "custom"
                      operator = "In"
                      values = ["gitlab-runner"]
            {{- if .Values.global.minio.enabled }}
            [runners.cache]
              Type = "s3"
              Path = "gitlab-runner"
              Shared = true
              [runners.cache.s3]
                ServerAddress = {{ include "gitlab-runner.cache-tpl.s3ServerAddress" . }}
                BucketName = "runner-cache"
                BucketLocation = "us-east-1"
                Insecure = false
            {{ end }}
      podAnnotations:
        backup.velero.io/backup-volumes-excludes: runner-secrets
    postgresql:
      install: false
    redis:
      architecture: replication
      cluster:
        enabled: true
    prometheus:
      install: false
    minio:
      persistence:
        size: 100Gi
        enabled: true
        annotations:
          helm.sh/resource-policy: keep
    gitlab:
      gitlab-pages:
        ingress:
          annotations:
            external-dns.alpha.kubernetes.io/hostname: "*.${PAGES_DOMAIN}"
            external-dns.alpha.kubernetes.io/target: ${PAGES_DOMAIN}
      webservice:
        enabled: true
        workerProcesses: 2
        ingress:
          proxyBodySize: 10G
        resources:
          requests:
            memory: 1Gi
          limits:
            memory: 3Gi
      sidekiq:
        enabled: true
        resources:
          requests:
            memory: 1Gi
          limits:
            memory: 3Gi
    registry:
      enabled: true
      database:
        enabled: true
        name: registry
        user: registry
        host: gitlab-postgres-cluster
        sslmode: prefer
        password:
          key: password
          secret: registry.gitlab-postgres-cluster.credentials.postgresql.acid.zalan.do
