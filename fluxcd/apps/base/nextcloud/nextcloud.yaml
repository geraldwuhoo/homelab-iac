---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  chart:
    spec:
      chart: nextcloud
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  interval: 10m0s
  timeout: 10m0s
  valuesFrom:
  - kind: Secret
    name: nextcloud-secret
    valuesKey: nextcloud-token
    targetPath: metrics.token
  values:
    image:
      repository: docker.io/library/nextcloud
      tag: 30.0.8-fpm
    ingress:
      enabled: true
      className: nginx-public
      annotations:
        homelab/public: "true"
        external-dns.alpha.kubernetes.io/hostname: cloud.${DOMAIN}
        external-dns.alpha.kubernetes.io/target: ${DOMAIN}
        nginx.ingress.kubernetes.io/proxy-body-size: 25G
        nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          
          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
    nginx:
      enabled: true
      image:
        repository: docker.io/library/nginx
        tag: 1.28.0-alpine
    replicaCount: 3
    nextcloud:
      host: cloud.${DOMAIN}
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: ADMIN_USERNAME
        passwordKey: ADMIN_PASSWORD
        smtpUsernameKey: SMTP_NAME
        smtpPasswordKey: SMTP_PASSWORD
        smtpHostKey: SMTP_HOST
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: no-reply.${DOMAIN}
        smtp:
          secure: tls
          port: 587
          authtype: plain
      phpConfigs:
        zz-opcache.ini: |-
          opcache.enable=1
          opcache.enable_cli=1
          opcache.interned_strings_buffer=8
          opcache.max_accelerated_files=10000
          opcache.memory_consumption=128
          opcache.save_comments=1
          opcache.revalidate_freq=1
        zz-pm.ini: |-
          pm = dynamic
          pm.max_children = 144
          pm.start_servers = 36
          pm.min_spare_servers = 36
          pm.max_spare_servers = 108
        zz-nextcloud.ini: |-
          upload_max_filesize=25G
          post_max_size=25G
          apc.enable_cli=1
          memory_limit=1024M
        zz-redis.ini: |-
          redis.session.locking_enabled=1
          redis.session.lock_retries=-1
          redis.session.lock_wait_time=10000
      defaultConfigs:
        apcu.config.php: true
        redis.config.php: false
        autoconfig.php: true
      livenessProbe:
        enabled: true
        initialDelaySeconds: 300  # first install may slow in rsync
      configs:
        custom.config.php: |-
          <?php
          $CONFIG = array (
            'overwriteprotocol' => 'https',
            'trusted_proxies' => ['10.0.0.0/8'],
            'filelocking.enabled' => 'true',
            'enable_previews' => 'true'
          );
        redis.config.php: |-
          <?php
          $CONFIG = array (
            'memcache.local' => '\OC\Memcache\Redis',
            'memcache.distributed' => '\OC\Memcache\Redis',
            'memcache.locking' => '\OC\Memcache\Redis',
            'redis' => array(
              'host' => 'nextcloud-redis-master',
              'port' => 6379,
              'password' => '${NEXTCLOUD_REDIS_PASS}'
            )
          );
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
      podSecurityContext:
        seLinuxOptions:
          user: system_u
          role: system_r
          type: container_t
          level: "s0:c111,c222"
    lifecycle:
      postStartCommand:
      - "sh"
      - "-c"
      - "find /usr/local/etc/php-fpm.d -name '*.ini' -exec ln -s {} /usr/local/etc/php/conf.d/ \\; && apt-get update && apt-get install -y openrc && start-stop-daemon --start --background --pidfile /cron.pid --exec /cron.sh"
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: nextcloud-postgres-cluster
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud.nextcloud-postgres-cluster.credentials.postgresql.acid.zalan.do
        usernameKey: username
        passwordKey: password
    redis:
      enabled: true
      auth:
        enabled: true
        password: ${NEXTCLOUD_REDIS_PASS}
    persistence:
      enabled: true
      accessMode: ReadWriteMany
      storageClass: ceph-cephfs-ssd-sc
      size: 8Gi
      nextcloudData:
        enabled: true
        storageClass: ceph-cephfs-hdd-sc
        accessMode: ReadWriteMany
        size: 64Gi
    resources:
      requests:
        cpu: 100m
        memory: 1Gi
      limits:
        memory: 1Gi
    metrics:
      enabled: false
      https: true
      image:
        repository: docker.io/xperimental/nextcloud-exporter
        tag: 0.8.0
      serviceMonitor:
        enabled: false
        namespace: prometheus
        labels:
          release: prometheus
